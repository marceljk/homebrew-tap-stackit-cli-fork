# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Stackit < Formula
  desc "Demo: A command-line interface to manage STACKIT resources.
This CLI is in a beta state. More services and functionality will be supported soon."
  homepage "https://github.com/stackitcloud/stackit-cli"
  version "0.34.6"
  license "Apache-2.0"
  disable! date: "2026-01-22", because: "the cask should be used now instead", replacement_cask: "stackit"


  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/stackitcloud/stackit-cli/releases/download/v0.34.5/stackit-cli_0.34.5_darwin_amd64.tar.gz"
      sha256 "8622cf9ca4cfb50fd13dd1f9ab85c2af508cd5a0e06ac6077df3269579ff1ad3"

      def install
        bin.install "stackit"
        generate_completions_from_executable(bin/"stackit", "completion")
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/stackitcloud/stackit-cli/releases/download/v0.34.5/stackit-cli_0.34.5_darwin_arm64.tar.gz"
      sha256 "e7f3005baedaa294098b8b9ab98fe416836ab4d2b6d8728f6e66968154ee7980"

      def install
        bin.install "stackit"
        generate_completions_from_executable(bin/"stackit", "completion")
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/stackitcloud/stackit-cli/releases/download/v0.34.5/stackit-cli_0.34.5_linux_amd64.tar.gz"
      sha256 "af73c4afff83998b9f722f227bac367926128207f506a4dce6f46186d4e9a73c"
      def install
        bin.install "stackit"
        generate_completions_from_executable(bin/"stackit", "completion")
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/stackitcloud/stackit-cli/releases/download/v0.34.5/stackit-cli_0.34.5_linux_arm64.tar.gz"
      sha256 "34d0462550e49b5260d91b077a0e040c6bf21467ba0141283fa6bd80fe66ef0a"
      def install
        bin.install "stackit"
        generate_completions_from_executable(bin/"stackit", "completion")
      end
    end
  end
end
